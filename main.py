from datetime import datetime
import nmap
from get_info import start


def get_command() -> str:
    return '-T4 -sV -Pn --script vulners '


def scan_host(host, arguments):
    nm = nmap.PortScanner()
    try:
        print(f"Scanning {host}...")
        nm.scan(hosts=host, arguments=arguments)
    except Exception as e:
        print(f"Error scanning host {host}: {e}")
        return None
    return nm


def print_scan_results(nm, filename):
    if nm is None:
        print("No scan results to print.")
        return

    with open(filename, 'w') as file:
        now = datetime.now()
        file.write(f"### Scan Date: {now.strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        file.write('# Nmap Scan Results\n\n')

        for host in nm.all_hosts():
            file.write(f'### Host: {host}\n')
            host_info = nm[host]
            for proto in host_info.all_protocols():
                file.write(f'### Protocol: {proto}\n')
                ports = host_info[proto].keys()

                for port in ports:
                    port_info = host_info[proto][port]
                    if 'http-server-header' in port_info:
                        file.write(f"**Server Header:** {port_info['http-server-header']}\n\n")
                    if 'script' in port_info and 'vulners' in port_info['script']:
                        vulners_content = port_info['script']['vulners']
                        file.write(f"## Port {port}/tcp\n")
                        file.write(f"Service: {port_info['name']}\n")

                        lines = vulners_content.strip().split('\n')
                        for line in lines:
                            if line.strip():
                                parts = line.split('\t')
                                if len(parts) >= 3:
                                    if 'CVE-' in parts[0]:
                                        cve = parts[0].strip()
                                        score = parts[1].strip()
                                        url = parts[2].strip()
                                        file.write(f'- **CVE ID**: {cve}\n')
                                        file.write(f'  - **Score**: {score}\n')
                                        file.write(f'  - **URL**: {url}\n\n')
                                    else:
                                        id_ = parts[1].strip()
                                        score = parts[2].strip()
                                        url = parts[3].strip()
                                        file.write(f'- **ID**: {id_}\n')
                                        file.write(f'  - **Score**: {score}\n')
                                        file.write(f'  - **URL**: {url}\n')

                                else:
                                    print(f"Invalid line: {line}")
                                file.write("\n")

                        file.write("\n")


def main():
    host_to_scan = input("Enter the host to scan (e.g., 192.168.1.1): ")
    if host_to_scan:

        arguments = get_command()
        nm = scan_host(host_to_scan, arguments=arguments)

        if nm:
            print_scan_results(nm, 'found_vulnerabilities.md')
            print('Results saved to found_vulnerabilities.md')
            start()
        else:
            print("Scan failed or no results to save.")


if __name__ == "__main__":
    main()
